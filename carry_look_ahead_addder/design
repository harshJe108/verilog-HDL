module carrylookahead4bit(output wire[3:0] sum,output wire carry,input wire[3:0] a,b,input wire cin);
  wire[3:0] prop,gen,c;
  assign prop=a|b;
  assign gen=a&b;
  assign c[0]=cin;
  assign c[1]=gen[0]|prop[0]&c[0];
  assign c[2]=gen[1]|prop[1]&c[1];
  assign c[3]=gen[2]|prop[2]&c[2];
  assign carry=gen[3]|prop[3]&c[3];
  assign sum=prop^c;
endmodule
module carry_look_ahead_16bit(output wire[15:0] sum, output wire cout, input wire [15:0] a,b, input wire cin);
  wire c1,c2,c3;
  carrylookahead4bit lull(sum[3:0],c1,a[3:0],b[3:0],cin);
  carrylookahead4bit lull1(sum[7:4],c2,a[7:4],b[7:4],c1);
  carrylookahead4bit lull2(sum[11:8],c3,a[11:8],b[11:8],c2);
  carrylookahead4bit lull3(sum[15:12],cout,a[15:12],b[15:12],c3);
endmodule
